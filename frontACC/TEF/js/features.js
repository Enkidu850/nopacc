var features={state:{grid:null,gridOptions:null},initState:function(){try{features.state={inFeatureLayerEdit:!1,inFeatureEdit:!1,queryLayer:null,queryLayerChanged:!1,attributeTable:null,featureAttributeType:["text","number","number"],spatialQueryCommand:{0:1071,1:1072,2:1074},drawAreaSelect:null,queryFeatures:null,editMode:!1,attributeTableDblClick:!1,autoSave:!0,maxAttributeFeatures:1e3,allowFeatureEditing:!0,featureLayerEdit:{type36_Point:{helpText:{text:Lang.features.editModeWarning,blink:!1},buttons:[{name:""+Lang.projectTree.addPoint,icon:"addPoint.svg",callback:ID=>{features.featureLayerDrawNewFeature(ID,0)},buttonType:0}]},type36_Polyline:{helpText:{text:Lang.features.editModeWarning,blink:!1},buttons:[{name:""+Lang.projectTree.addPolyline,icon:"addPolyline.svg",callback:ID=>{features.featureLayerDrawNewFeature(ID,1)},buttonType:0}]},type36_Polygon:{helpText:{text:Lang.features.editModeWarning,blink:!1},buttons:[{name:""+Lang.projectTree.addPolygon,icon:"addPolygon.svg",callback:ID=>{features.featureLayerDrawNewFeature(ID,2)},buttonType:0}]},type36_Colleciton:{properties:[]},type99:{properties:[]},genericButtons:[{name:""+Lang.projectTree.select,icon:"select.svg",callback:ID=>{features.featureLayerCommand(ID,1070,0)},buttonType:0},{name:""+Lang.projectTree.area,icon:"areaSelect.svg",callback:ID=>{features.featureLayerAreaSelectStart(ID)},buttonType:0},{name:""+Lang.projectTree.attributes,icon:"attributeTable.svg",callback:ID=>{features.openAttributeTable(!1)},buttonType:0},{name:""+Lang.projectTree.zoom,icon:"zoomTo.svg",callback:ID=>{SGWorld.Navigate.FlyTo(ID)},buttonType:0},{name:""+Lang.projectTree.close,icon:"OK.svg",callback:ID=>{panel.back()},buttonType:0}]},featureLayerQuery:{type99:{properties:[]},genericButtons:[{name:""+Lang.projectTree.select,icon:"select.svg",callback:ID=>{features.featureLayerCommand(ID,1070,0)},buttonType:0},{name:""+Lang.projectTree.area,icon:"areaSelect.svg",callback:ID=>{features.featureLayerAreaSelectStart(ID)},buttonType:0},{name:""+Lang.projectTree.attributes,icon:"attributeTable.svg",callback:ID=>{features.openAttributeTable(!1)},buttonType:0},{name:""+Lang.projectTree.zoom,icon:"zoomTo.svg",callback:ID=>{SGWorld.Navigate.FlyTo(ID)},buttonType:0},{name:""+Lang.projectTree.close,icon:"OK.svg",callback:ID=>{panel.back()},buttonType:0}]},featureEditor:{properties:[],buttons:[{name:""+Lang.projectTree.delete,icon:"Delete.svg",callback:ID=>{features.deleteFeature(ID,!0)},buttonType:0},{name:""+Lang.projectTree.close,icon:"OK.svg",callback:ID=>{panel.back()},buttonType:0}]},last:null}}catch(err){application.errorHandling(err.message,0)}},init:function(){try{features.initState(),features.render(),SGWorld.AttachEvent("OnObjectAction",features.OnObjectAction),SGWorld.AttachEvent("OnInputModeChanged",features.OnInputModeChanged)}catch(err){application.errorHandling(err.message,0)}},render:function(){try{$("body").append(` 
                <div id="attributeTableDiv" class = "fixed-scroll-parent"  style="display:none">
                <div class="fixed-size-child px6"> ${Lang.features.searchQuery} 
                    <input type='text' class="attributeSearch" id="attributeTableSearchString" onkeydown = "if (event.keyCode == 13) features.queryAttributes()" >
                    <button class=' ' onclick="features.queryAttributes()">${Lang.projectTree.search}</button>
                </div>    
                <div class="fixed-size-child px6">
                    <span class='s9warning' id='attributeTableMaxResults'></span>
                </div>
                <div class="scrollable-child">
                    <div class="scrollable-content">
                    <div id="attributeTable" class="ag-theme-alpine s9" style="height: 100%; width:100%;"></div>
                    </div>
                </div>
            </div>`)}catch(err){application.errorHandling(err.message,0)}},show:function(layerID,mode){try{SGWorld.ProjectTree.GetLayerAsync(layerID).OnResolve(function(layer){var title,PSArray;features.state.queryLayer=SGWorld.Creator.GetObject(layerID),1!=mode||layer.Editable?(features.state.inFeatureLayerEdit=!0,layer=SGWorld.ProjectTree.GetItemName(layerID).substring(0,20),features.state.queryLayerChanged=!1,features.state.editMode=1==mode&&application.state.TEPLUS&&features.state.queryLayer.Editable,title=0==mode?Lang.projectTree.query:Lang.projectTree.edit,PSArray=features.state.editMode?"features.state.featureLayerEdit":"features.state.featureLayerQuery",projectTree.openPropertiesSheet(layerID,title+": "+layer,PSArray)):application.showMessageBar(Lang.features.notEditable,5,1)}).OnReject(function(error){application.errorHandling(error,0)})}catch(err){application.errorHandling(err.message,0)}},closeTool:function(){try{features.state.inFeatureLayerEdit=!1,(features.state.queryFeatures=null)!=features.state.drawAreaSelect&&(SGWorld.ProjectTree.DeleteItem(features.state.drawAreaSelect.ID),features.state.drawAreaSelect=null)}catch(err){application.errorHandling(err.message,0)}},saveLayer:function(){try{features.state.queryLayer.SaveAsync().OnResolve(function(){features.state.queryLayerChanged=!1,application.showMessageBar(Lang.features.layerSaved,5,2)}).OnReject(function(error){application.errorHandling(error,0)})}catch(err){application.errorHandling(err.message,0)}},featureEditor:function(itemID,title){try{var PSDiv=$("#propertiesSheetDiv").clone();projectTree.state.PSIndex++,PSDiv.prop("id","PSDiv"+projectTree.state.PSIndex),$("body").append(PSDiv),features.buildFeatureEditor(itemID,PSDiv),projectTree.state.inEditGeometry=!1,projectTree.state.editGeometryBtn=null,panel.addAndShow(0,PSDiv.attr("id"),title,features.closeFeatureEditor,panel.state.widthSmall,panel.state.heightLarge,!1,0)}catch(err){application.errorHandling(err.message,0)}},closeFeatureEditor:function(){try{features.state.queryLayerChanged&&(features.state.autoSave?features.saveLayer():application.showMessageBar(Lang.features.layerNotSaved,5,2)),features.state.inFeatureEdit=!1,SGWorld.Application.Selection.RemoveAll(),SGWorld.Window.SetInputMode(0)}catch(err){application.errorHandling(err.message,0)}},buildFeatureEditor:function(itemID,PSDiv){try{var disabled,buttonsArea,currentFeature=SGWorld.Creator.GetObject(itemID),PSArray=features.state.featureEditor,attributesCount=(features.state.editMode&&(disabled="",12==features.state.queryLayer.FeatureGroups[projectTree.state.geometryTypes[features.state.queryLayer.GeometryType]].GetProperty("Altitude Method")&&(disabled="disabled"),PSDiv.append($(`<div class='gridDouble propertiesTitle'>${Lang.projectTree.editModes}</div>`)),PSDiv.append($(`<div class='gridDouble'>
                <div class='grid2'>
                    <div id='featureEditModes' class='gridLeft'>
                        <button id='featureEditModeMagnet'${disabled} class="ButtonMedium" onclick="features.setEditMode('${itemID}',16386)" title="${Lang.projectTree.magnetMode}"><img src="images/icons/magnet.svg"></button>
                        <button id='featureEditModeXY' class="ButtonMedium" onclick="features.setEditMode('${itemID}',4098)" title="${Lang.projectTree.xyMode}"><img src="images/icons/move-xy.svg"></button>
                        <button id='featureEditModeZ' ${disabled} class="ButtonMedium" onclick="features.setEditMode('${itemID}',8198)" title="${Lang.projectTree.zMode}"><img src="images/icons/move-z.svg"></button>
                    </div>

                    <div class='gridRight'>
                        <button class="ButtonMedium" onclick="application.execute(2345,0)" title="${Lang.projectTree.undo}"><img src="images/icons/undo.svg"></button>
                        <button class="ButtonMedium" onclick="application.execute(2346,0)" title="${Lang.projectTree.redo}"><img src="images/icons/redo.svg"></button>
                    </div>
                </div>
            </div>`))),PSDiv.append($(`<div class='gridDouble propertiesTitle'>${Lang.projectTree.attributes}</div>`)),currentFeature.FeatureAttributes.Count),readOnly=features.state.editMode?"":"readonly";for(let i=0;i<attributesCount;i++){PSDiv.append($(`<div class='gridLeft'>${currentFeature.FeatureAttributes.Item(i).Name}</div>`));var inputDiv=$("<div class='gridRight' ></div"),inputField=(PSDiv.append(inputDiv),features.state.featureAttributeType[features.state.queryLayer.DataSourceInfo.Attributes.Attribute(i).Type],$(`<input type='text' value='${currentFeature.FeatureAttributes.Item(i).Value}' ${readOnly}>`));inputDiv.append(inputField),inputField.on("change",function(){features.updateFeauteAttribute(currentFeature,i)})}features.state.editMode&&(buttonsArea=$("<div class='gridDouble'></div>"),PSDiv.append(buttonsArea),$.each(PSArray.buttons,function(index,button){buttonsArea.append($(`<button class=' ButtonLarge  ' onclick='features.state.featureEditor.buttons[${index}].callback("${itemID}")'><img src="images/icons/${button.icon}"><br><span>${button.name}</span></button>))`))}))}catch(err){return application.errorHandling(err.message,0),""}},updateFeauteAttribute:function(feature,attributeIndex){try{feature.FeatureAttributes.Item(attributeIndex).Value=$(event.target).val()}catch(err){return application.errorHandling(err.message,0),""}},featureLayerSetButtonsState:function(layerID,event){try{var turnOn=!services.isButtonSelected(event);services.resetAllButtons(panel.state.currentElement),services.highlightButtonFromEvent(event,turnOn),SGWorld.ProjectTree.SelectItem(layerID,0,0)}catch(err){return application.errorHandling(err.message,0),""}},featureLayerCommand:function(layerID,queryType,value){try{features.featureLayerSetButtonsState(layerID,event),application.execute(1096,0),application.execute(queryType,value)}catch(err){return application.errorHandling(err.message,0),""}},featureLayerDrawNewFeature:function(layerID,geometryType){try{var object;features.state.editMode&&(features.featureLayerSetButtonsState(layerID,event),(object=SGWorld.Creator.GetObject(layerID)).FeatureGroups[projectTree.state.geometryTypes[object.GeometryType]].DrawFeature(4,0,0))}catch(err){return application.errorHandling(err.message,0),""}},setEditMode:function(itemID,editMode){try{services.resetAllButtons($("#featureEditModes")),services.highlightButtonFromEvent(event,!0),SGWorld.ProjectTree.EditItemEx(itemID,editMode,0,0,0)}catch(err){return application.errorHandling(err.message,0),""}},featureLayerAreaSelectStart:function(layerID){try{features.featureLayerSetButtonsState(layerID,event),features.state.drawAreaSelect=SGWorld.Drawing.DrawPolygon(4,SGWorld.ProjectTree.HiddenGroupID,0,0),features.state.drawAreaSelect.Position.AltitudeType=3,features.state.drawAreaSelect.LineStyle.Width=-3,features.state.drawAreaSelect.LineStyle.Pattern=3284386755,features.state.drawAreaSelect.Visibility.ShowThroughDistance=2e5}catch(err){return application.errorHandling(err.message,0),""}},selectSingleFeature:function(featureID){try{SGWorld.Window.SetInputMode(0),SGWorld.Application.Selection.Add(featureID),features.state.editMode?(features.featureEditor(featureID,Lang.projectTree.editFeature),features.state.queryLayerChanged=!0,features.state.inFeatureEdit=!0,SGWorld.ProjectTree.EditItemEx(featureID,16386,0,0,0),12==features.state.queryLayer.FeatureGroups[projectTree.state.geometryTypes[features.state.queryLayer.GeometryType]].GetClassification("Altitude Method")?services.highlightButton("featureEditModeXY",!0):services.highlightButton("featureEditModeMagnet",!0)):features.featureEditor(featureID,Lang.projectTree.editFeature)}catch(err){return application.errorHandling(err.message,0),""}},deleteFeature:function(itemID,fromPS){try{SGWorld.Creator.GetObject(itemID);confirm(Lang.projectTree.deleteConfirm)&&(features.state.queryLayer.FeatureGroups[projectTree.state.geometryTypes[features.state.queryLayer.GeometryType]].RemoveFeature(itemID),fromPS)&&panel.back()}catch(err){return application.errorHandling(err.message,0),""}},OnObjectAction:function(objectID,Action){try{features.state.inFeatureLayerEdit&&!features.state.inFeatureEdit&&(31==Action.Code&&null!=features.state.drawAreaSelect?null!=features.state.drawAreaSelect&&(SGWorld.Window.SetInputMode(0),application.showMessageBar(Lang.features.queryWait,5,2),features.state.queryLayer.ExecuteQueryAsync($("#attributeTableSearchString").val(),features.state.maxAttributeFeatures,"",features.state.drawAreaSelect.Geometry).OnResolve(function(layerFeatures){if(application.closeMessageBar(),features.state.inFeatureLayerEdit){features.state.queryFeatures=layerFeatures,$("#attributeTableSearchString").attr("placeholder",""),SGWorld.Application.Selection.RemoveAll();for(var i=0;i<features.state.queryFeatures.Count;i++)SGWorld.Application.Selection.Add(features.state.queryFeatures.Item(i).ID);features.openAttributeTable(!0),SGWorld.ProjectTree.DeleteItem(features.state.drawAreaSelect.ID),features.state.drawAreaSelect=null}}).OnReject(function(error){application.errorHandling("ExecuteQueryAsync",0),features.state.drawAreaSelect=null})):20!=Action.Code&&31!=Action.Code||features.selectSingleFeature(objectID))}catch(err){application.errorHandling(err.message,0)}},OnInputModeChanged:function(mode){try{0<features.state.inFeatureLayerEdit&&0==mode&&services.resetAllButtons(panel.state.currentElement)}catch(err){application.errorHandling(err.message,0)}},openAttributeTable:function(fromQuery){try{$("#attributeTableSearchString").val(""),0<fromQuery?($("#attributeTableSearchString").attr("placeholder",""+Lang.projectTree.selectedFeatures),features.buildAttributesTable()):($("#attributeTableSearchString").attr("placeholder",""),features.queryAttributes()),panel.addAndShow(0,"attributeTableDiv",Lang.projectTree.attributes,features.closeAttributeTable,panel.state.widthLarge,panel.state.heightLarge,!1,3)}catch(err){application.errorHandling(err.message,0)}},queryAttributes:function(){try{application.showMessageBar(Lang.features.queryWait,5,2),features.state.queryLayer.ExecuteQueryAsync($("#attributeTableSearchString").val(),features.state.maxAttributeFeatures,"",SGWorld.Creator.GeometryCreator.CreatePolygonGeometry(null)).OnResolve(function(layerFeatures){application.closeMessageBar(),features.state.inFeatureLayerEdit&&(features.state.queryFeatures=layerFeatures,$("#attributeTableSearchString").attr("placeholder",""),features.buildAttributesTable())}).OnReject(function(error){application.errorHandling("ExecuteQueryAsync",0)})}catch(err){application.errorHandling(err.message,0)}},buildAttributesTable:function(){try{var columnDefs=[],rowData=[],count=($("#attributeTableMaxResults").hide(),features.state.queryFeatures.Count);if(0==count)application.errorHandling(""+Lang.projectTree.errorNoFeatures,2);else{count==features.state.maxAttributeFeatures&&($("#attributeTableMaxResults").text(`${Lang.projectTree.attributeMaxResult} ${features.state.maxAttributeFeatures} `+Lang.projectTree.attributeItems),$("#attributeTableMaxResults").show());var firstFeature=features.state.queryFeatures.Item(0);columnDefs.push({headerName:"#",field:"index",sortable:!0,filter:!1,floatingFilter:!1});for(var j=0;j<firstFeature.FeatureAttributes.Count;j++)columnDefs.push({headerName:firstFeature.FeatureAttributes.Item(j).Name,field:firstFeature.FeatureAttributes.Item(j).Name.toLowerCase().replace(/\s+/g,"_"),sortable:!0,filter:!0,floatingFilter:!0,editable:!0});for(var i=0;i<count;i++){var currentFeature=features.state.queryFeatures.Item(i);if(3!=currentFeature.State){var rowObject={};rowObject.index=i;for(j=0;j<currentFeature.FeatureAttributes.Count;j++){var attribute=currentFeature.FeatureAttributes.Item(j);rowObject[attribute.Name.toLowerCase().replace(/\s+/g,"_")]=attribute.Value}rowObject.DataSourceFeatureID=currentFeature.DataSourceFeatureID,rowData.push(rowObject)}}var eGridDiv,isPaging=1e3<features.state.maxAttributeFeatures;null==this.state.grid?(this.state.gridOptions={columnDefs:columnDefs,rowData:rowData,pagination:isPaging,paginationPageSize:1e3,filter:!0,sortable:!0,onRowClicked:function(event){features.state.attributeTableDblClick=!1,setTimeout(()=>{features.state.attributeTableDblClick||navigate.FlyToFeatureDataSourceFeatureID(features.state.queryFeatures,event.data.DataSourceFeatureID,0)},250)},onRowDoubleClicked:function(event){features.state.attributeTableDblClick=!0,navigate.FlyToFeatureDataSourceFeatureID(features.state.queryFeatures,event.data.DataSourceFeatureID,14),panel.back();event=features.state.queryLayer.FeatureGroups.Item(0).ExecuteGetDataSourceFeatureIdQuery(event.data.DataSourceFeatureID).ID;features.selectSingleFeature(event)}},eGridDiv=$("#attributeTable")[0],this.state.grid=new agGrid.Grid(eGridDiv,this.state.gridOptions)):(this.state.gridOptions.api.setColumnDefs(columnDefs),this.state.gridOptions.api.setRowData(rowData)),$("#attributeTable_filter").find("label:first").contents().filter(function(){return 3===this.nodeType}).first().replaceWith(Lang.features.filterResult)}}catch(err){application.errorHandling(err.message,0)}},closeAttributeTable:function(){try{SGWorld.Window.SetInputMode(0),features.state.gridOptions&&features.state.gridOptions.api&&features.state.gridOptions.api.setRowData([])}catch(err){application.errorHandling(err.message,0)}},dummy:null};